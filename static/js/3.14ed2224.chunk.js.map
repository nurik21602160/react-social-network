{"version":3,"sources":["components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/Chat/Chat.module.css","components/Dialogs/Dialog/Dialog.js","components/Dialogs/Message/Message.js","components/Chat/Chat.js","components/Chat/ChatContainer.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","Dialog","props","className","s","item","to","url","activeClassName","active","text","Message","message","maxLengh10","maxLenghCreator","ChatReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","renderField","type","name","validate","Chat","chat","values","SendMessage","ChatContainer","connect","state","messagesPage","newMessage","dispatch","messageAddActionCreator","Dialogs","NewDialogsData","dialogs","map","el","id","NewMessagesData","messages","classes","diaglos_items","compose","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,yB,oBCAvDD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,SAAW,4B,oBCA/GD,EAAOC,QAAU,CAAC,KAAO,qB,qFCUVC,EARA,SAACC,GACZ,OACI,qBAAKC,UAAWC,IAAEC,KAAlB,SACI,cAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,IAAKC,gBAAiBJ,IAAEK,OAAzD,SAAkEP,EAAMQ,U,kBCErEC,EANC,SAACT,GACb,OACI,qBAAKC,UAAWC,IAAEQ,QAAlB,SAA4BV,EAAMU,W,6ECEpCC,EAAaC,YAAgB,IAW7BC,EAAgBC,YAAU,CAACC,KAAM,YAAjBD,EATL,SAACd,GACd,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAaC,KAAK,OAAOC,KAAK,UAAUC,SAAU,CAACZ,KACrE,wBAAQU,KAAK,SAAb,iCAsBGG,EAfF,SAACxB,GAMV,OACI,qBAAKC,UAAWC,IAAEuB,KAAlB,SACI,cAACZ,EAAD,CAAeG,SANL,SAACU,GACf1B,EAAM2B,YAAYD,EAAOhB,e,SCAlBkB,EAHOC,aANA,SAACC,GACnB,MAAO,CACHpB,QAASoB,EAAMC,aAAaC,eAVX,SAACC,GACtB,MAAO,CACHN,YAAa,SAACjB,GACVuB,EAASC,YAAwBxB,QAWvBmB,CAA6CL,GCapDW,EAvBC,SAACnC,GAEb,IAAIoC,EAAiBpC,EAAMqC,QAAQC,KAAI,SAACC,GACpC,OAAO,cAAC,EAAD,CAAQlC,IAAKkC,EAAGC,GAAIhC,KAAM+B,EAAGjB,UAGpCmB,EAAkBzC,EAAM0C,SAASJ,KAAI,SAACC,GACtC,OAAO,cAAC,EAAD,CAAS7B,QAAS6B,EAAG7B,aAGhC,OACI,sBAAKT,UAAW0C,IAAQN,QAAxB,UACI,qBAAKpC,UAAW0C,IAAQC,cAAxB,SACKR,IAEL,sBAAKnC,UAAW0C,IAAQD,SAAxB,UACKD,EACD,cAAC,EAAD,W,iBCXDI,sBACXC,IACAjB,aAZkB,SAACC,GACnB,MAAO,CACHO,QAASP,EAAMC,aAAaM,QAC5BK,SAAUZ,EAAMC,aAAaW,YAIZ,MAGVG,CAGbV","file":"static/js/3.14ed2224.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__2jaF4\",\"active\":\"Dialog_active__2fc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"diaglos_items\":\"Dialogs_diaglos_items__29PAO\",\"messages\":\"Dialogs_messages__1w_Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__21N9Z\"};","import s from './Dialog.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst Dialog = (props) => {\n    return (\n        <div className={s.item}>\n            <NavLink to={'/dialogs/' + props.url} activeClassName={s.active}>{props.text}</NavLink>\n        </div>\n    );\n}\n\nexport default Dialog; ","import s from './Message.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    );\n}\n\nexport default Message;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLenghCreator, required } from '../../utils/validators';\nimport { renderField } from '../Textarea/FormControl';\nimport s from './Chat.module.css';\n\nconst maxLengh10 = maxLenghCreator(10)\n\nconst ChatForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={renderField} type=\"text\" name=\"message\" validate={[maxLengh10]} />\n            <button type=\"submit\"> Send Message</button>\n        </form>\n    )\n}\n\nconst ChatReduxForm = reduxForm({form: 'ChatForm'})(ChatForm)\n\nconst Chat = (props) => {\n\n    let SendMessage = (values) => {\n        props.SendMessage(values.message);\n    }\n\n    return (\n        <div className={s.chat}>\n            <ChatReduxForm onSubmit={SendMessage} />\n        </div>\n    );\n}\n\n\n\nexport default Chat; ","import React from 'react';\nimport { connect } from 'react-redux';\nimport { messageAddActionCreator} from './../../redux/dialogsPageReducer';\nimport Chat from './Chat'\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        SendMessage: (message) => {\n            dispatch(messageAddActionCreator(message));\n        }\n    }    \n}\n\nlet mapStateToProps = (state) => {\n    return {\n        message: state.messagesPage.newMessage,\n    }\n};\n\nconst ChatContainer = connect(mapStateToProps, mapDispatchToProps)(Chat);\n\n\nexport default ChatContainer; ","import { NavLink } from 'react-router-dom'\nimport Dialog from './Dialog/Dialog'\nimport Message from './Message/Message'\nimport classes from './Dialogs.module.css'\nimport Chat from '../Chat/Chat'\nimport ChatContainer from '../Chat/ChatContainer'\nimport { connect } from 'react-redux'\n\n\nconst Dialogs = (props) => {\n    \n    let NewDialogsData = props.dialogs.map((el) => {\n        return <Dialog url={el.id} text={el.name} />;\n    })\n\n    let NewMessagesData = props.messages.map((el) => {\n        return <Message message={el.message} />\n    })\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.diaglos_items}>\n                {NewDialogsData}\n            </div>\n            <div className={classes.messages}>\n                {NewMessagesData}\n                <ChatContainer />\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport Dialogs from './Dialogs';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.messagesPage.dialogs,\n        messages: state.messagesPage.messages\n    }\n}\n\nlet mapDispatchToProps = null;\n\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs);"],"sourceRoot":""}